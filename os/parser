#!/usr/bin/env node

var fs = require('fs')
fs.writeFileSync('capsule.log', 'node parser was called but nothing happened', 'utf8')


var url = require('url')

// parse URL, split up query params
var uri = process.argv[2]
var parsedURI = url.parse(uri)
payloadArray = parsedURI.query.split(/[\=\&]/)

// convert to key-val dict
var payload = {}
var keysToParse = ['body', 'title', 'src', 'comment', 'channel', 'mentions']
keysToParse.forEach(function(key) {
  const keyPos = payloadArray.indexOf(key)
  if (keyPos !== -1) {
    payload[key] = payloadArray[keyPos + 1]
  }
})

// decode payload from base64
var simpleDecode = function(b64str) { 
  return new Buffer(b64str, 'base64').toString()
}

payload.body = unescape(simpleDecode(payload.body))
if (typeof payload.comment === 'string') {
  payload.body = payload.body.concat('\n<hr /><br />').concat(unescape(payload.comment))
}
payload.title = unescape(payload.title)
payload.channel = payload.channel

// ssbify the thing, finally
var ssbifyString = require('ssbify-string')
var ssbClient = require('ssb-client')

ssbClient(function (err, sbot) {
  if (err) fs.writeFileSync('capsule.log', err, 'utf8')
  
  ssbifyString(
    sbot, payload.body,
    { ignoreBrokenImgLinks: true, url: payload.src, title: payload.title },
    function(err, res) {
      if (err) fs.writeFileSync('capsule.log', err, 'utf8')
      else fs.writeFileSync('capsule.log', res, 'utf8')

      // decode mentions, extract them
      const mentionTest = new RegExp(/\s+@\w+/g)
      const matchedMentions = res.match(mentionTest)
      var mentions = null
      if (matchedMentions instanceof Array) {
        mentions = matchedMentions.map(function(mention) {
          if (typeof mention === 'string') {
            return mention.split('@')[1]
          }
        })
      }

      // TODO preflight check to ensure a gross post is not pushed instead

      // publish a message
      sbot.publish({ type: 'post',
                     text: res,
                     channel: payload.channel || '',
                     mentions: mentions
                   }, 
                   function (err, msg) {
                     if (err) fs.writeFileSync('capsule.log', err.message, 'utf8')
                   })
  
    })
})
